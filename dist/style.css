@font-face {
  font-family: 'swiper-icons';
  src: url("data:application/font-woff;charset=utf-8;base64, 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") format("woff");
  font-weight: 400;
  font-style: normal;
}

:root {
  --swiper-theme-color: #007aff;
}

.swiper-container {
  margin-left: auto;
  margin-right: auto;
  position: relative;
  overflow: hidden;
  list-style: none;
  padding: 0;
  /* Fix of Webkit flickering */
  z-index: 1;
}

.swiper-container-vertical > .swiper-wrapper {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.swiper-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  display: -webkit-box;
  display: flex;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
  box-sizing: content-box;
}

.swiper-container-android .swiper-slide,
.swiper-wrapper {
  -webkit-transform: translate3d(0px, 0, 0);
  transform: translate3d(0px, 0, 0);
}

.swiper-container-multirow > .swiper-wrapper {
  flex-wrap: wrap;
}

.swiper-container-multirow-column > .swiper-wrapper {
  flex-wrap: wrap;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
}

.swiper-container-free-mode > .swiper-wrapper {
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
  margin: 0 auto;
}

.swiper-slide {
  flex-shrink: 0;
  width: 100%;
  height: 100%;
  position: relative;
  -webkit-transition-property: -webkit-transform;
  transition-property: -webkit-transform;
  transition-property: transform;
  transition-property: transform, -webkit-transform;
}

.swiper-slide-invisible-blank {
  visibility: hidden;
}

/* Auto Height */

.swiper-container-autoheight,
.swiper-container-autoheight .swiper-slide {
  height: auto;
}

.swiper-container-autoheight .swiper-wrapper {
  -webkit-box-align: start;
  align-items: flex-start;
  -webkit-transition-property: height, -webkit-transform;
  transition-property: height, -webkit-transform;
  transition-property: transform, height;
  transition-property: transform, height, -webkit-transform;
}

/* 3D Effects */

.swiper-container-3d {
  -webkit-perspective: 1200px;
  perspective: 1200px;
}

.swiper-container-3d .swiper-wrapper,
.swiper-container-3d .swiper-slide,
.swiper-container-3d .swiper-slide-shadow-left,
.swiper-container-3d .swiper-slide-shadow-right,
.swiper-container-3d .swiper-slide-shadow-top,
.swiper-container-3d .swiper-slide-shadow-bottom,
.swiper-container-3d .swiper-cube-shadow {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.swiper-container-3d .swiper-slide-shadow-left,
.swiper-container-3d .swiper-slide-shadow-right,
.swiper-container-3d .swiper-slide-shadow-top,
.swiper-container-3d .swiper-slide-shadow-bottom {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 10;
}

.swiper-container-3d .swiper-slide-shadow-left {
  background-image: -webkit-gradient(linear, right top, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to left, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-right {
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-top {
  background-image: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to top, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

.swiper-container-3d .swiper-slide-shadow-bottom {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0)));
  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0));
}

/* CSS Mode */

.swiper-container-css-mode > .swiper-wrapper {
  overflow: auto;
  scrollbar-width: none;
  /* For Firefox */
  -ms-overflow-style: none;
  /* For Internet Explorer and Edge */
}

.swiper-container-css-mode > .swiper-wrapper::-webkit-scrollbar {
  display: none;
}

.swiper-container-css-mode > .swiper-wrapper > .swiper-slide {
  scroll-snap-align: start start;
}

.swiper-container-horizontal.swiper-container-css-mode > .swiper-wrapper {
  -webkit-scroll-snap-type: x mandatory;
  -ms-scroll-snap-type: x mandatory;
  scroll-snap-type: x mandatory;
}

.swiper-container-vertical.swiper-container-css-mode > .swiper-wrapper {
  -webkit-scroll-snap-type: y mandatory;
  -ms-scroll-snap-type: y mandatory;
  scroll-snap-type: y mandatory;
}

:root {
  --color-black: #000;
  --color-white: #fff;
  --color-blue: #00b4ff;
  --color-main-bg: #191919;
  --color-icon-bg: #f2f2f2;
}

@font-face {
  font-family: "OpenSans";
  src: url("./static/fonts/OpenSans-Bold.woff") format("woff");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "OpenSans";
  src: url("./static/fonts/OpenSans-Bold.woff2") format("woff2");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "OpenSans";
  src: url("./static/fonts/OpenSans-Regular.woff") format("woff");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "OpenSans";
  src: url("./static/fonts/OpenSans-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

.container {
  max-width: 1291px;
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
}

a {
  text-decoration: none;
  color: inherit;
}

body {
  color: var(--color-white);
  font-size: 16px;
  font-family: "OpenSans", sans-serif;
  font-weight: 400;
  line-height: 1;
}

.swiper-arrow {
  fill: #686868;
  width: 50px;
  height: 30px;
}

.swiper-btns {
  margin: 10px 0;
  display: -webkit-box;
  display: flex;
}

.swiper-btns > * {
  cursor: pointer;
}

.swiper-btns > * svg {
  -webkit-transition: fill .3s;
  transition: fill .3s;
}

.swiper-btns > *:hover svg {
  fill: var(--color-white);
}

.main-btn {
  font-size: 16px;
  padding: 19px 35px;
  border: 1px solid var(--color-blue);
  border-radius: 4px;
  background: transparent;
  -webkit-transition: background-color .3s, border .3s;
  transition: background-color .3s, border .3s;
}

.main-btn:hover {
  border: 1px solid transparent;
  background-color: var(--color-blue);
}

h1 {
  max-width: 704px;
  font-size: 65px;
}

h1 > span {
  color: var(--color-blue);
}

h1 + p {
  line-height: 48px;
  font-size: 36px;
  max-width: 500px;
}

h2 {
  text-align: center;
  font-size: 60px;
}

.main {
  background-color: var(--color-main-bg);
  background-image: url("./static/img/main-bg.png");
  background-position: top left;
  background-repeat: no-repeat;
}

.main__adv {
  margin-bottom: 199px;
}

.main__header {
  margin-bottom: 108px;
}

.header {
  position: relative;
  z-index: 3;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  justify-content: space-between;
  padding-top: 32px;
  height: 56px;
}

.header__nav {
  margin-left: -64px;
}

.logo {
  display: -webkit-box;
  display: flex;
}

.logo__text {
  margin-left: 25px;
}

.logo__title {
  margin-bottom: 10px;
}

.logo__subtitle {
  color: #7e88a1;
  font-size: 12px;
  max-width: 150px;
}

.navigation {
  display: -webkit-box;
  display: flex;
}

.navigation > li:not(:last-child) {
  margin-right: 50px;
}

.navigation > li > a {
  -webkit-transition: color .3s;
  transition: color .3s;
}

.navigation > li > a:hover {
  color: var(--color-blue);
}

.hero {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-pack: justify;
  justify-content: space-between;
  min-height: calc(100vh - 56px);
}

.hero-img {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  margin-left: 3px;
}

.hero-img__main-img {
  position: relative;
  z-index: 2;
}

.hero-img__link {
  position: relative;
  z-index: 3;
  display: block;
  -webkit-transition: color .3s;
  transition: color .3s;
  font-size: 12px;
  margin-left: 10px;
}

.hero-img__link > span {
  font-size: 22px;
}

.hero-img__link:hover {
  color: var(--color-blue);
}

.hero-img > div {
  position: relative;
}

.hero-img__effects-img {
  z-index: 1;
  position: absolute;
  min-width: 898px;
  height: 890px;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.hero-text {
  position: relative;
  z-index: 3;
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
}

.hero-text > h1 {
  margin-bottom: 40px;
}

.hero-text > h1 + p {
  margin-bottom: 48px;
}

.hero-text__icons {
  margin-bottom: 50px;
}

.hero-text__btn {
  display: inline-block;
  background-color: var(--color-blue);
  color: var(--color-white);
  border: 1px solid transparent;
  padding: 17px 69px;
  font-size: 18px;
  border-radius: 4px;
  -webkit-transition: background-color .3s, border .3s;
  transition: background-color .3s, border .3s;
  margin-bottom: 199px;
}

.hero-text__btn:hover {
  border: 1px solid var(--color-blue);
  background-color: transparent;
}

.hero-icons {
  display: -webkit-box;
  display: flex;
}

.hero-icons__icon:not(:last-child) {
  margin-right: 89px;
}

.hero-icons__icon > img {
  display: block;
  margin: 0 auto;
}

.hero-icons__icon > p {
  max-width: 145px;
  font-size: 18px;
  margin-top: 30px;
}

.hero-icons__icon > p:first-child {
  max-width: 125px;
}

.adv__title {
  margin-bottom: 50px;
}

.adv__content {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
}

.adv__adv-img {
  text-align: center;
}

.adv-icons__block {
  position: relative;
}

.adv-icons__block > p {
  max-width: 240px;
}

.adv-icons__block:not(:last-child) {
  margin-bottom: 80px;
}

.adv-icons__block:last-child .adv-icons__line {
  top: 0px;
}

.adv-icons__adv-icon {
  margin-bottom: 20px;
}

.adv-icons--2 {
  margin-left: auto;
  text-align: right;
}

.adv-icons--2 .adv-icon {
  margin-left: auto;
}

.adv-icons__line {
  position: absolute;
  top: 30px;
}

.adv-icons.adv-icons--1 .adv-icons__line {
  right: -20px;
}

.adv-icons.adv-icons--2 .adv-icons__line {
  left: -90px;
}

.adv-icon {
  display: -webkit-box;
  display: flex;
  border-radius: 6px;
  -webkit-box-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  align-items: center;
  width: 61px;
  height: 61px;
  background-color: var(--color-icon-bg);
  text-align: center;
}

.feedback {
  padding-bottom: 120px;
}

.feedback__content {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
  -webkit-box-align: center;
  align-items: center;
}

.feedback__title {
  margin-bottom: 60px;
}

.feedback__link {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: var(--color-blue);
}

.feedback__gallery-top {
  max-width: 410px;
}

.feedback__gallery-top .swiper-slide {
  background-size: cover;
  background-position: center;
  width: 410px;
  height: 410px;
  border-radius: 10px;
}

.feedback__gallery-thumbs {
  padding: 20px;
}

.feedback__gallery-thumbs .swiper-slide {
  cursor: pointer;
  background-size: cover;
  background-position: center;
  border-radius: 80px;
  max-width: 80px;
  height: 80px;
}

.feedback__gallery-thumbs .swiper-slide-active::after {
  content: '';
  display: block;
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  background-color: transparent;
  border: 1px solid var(--color-blue);
  border-radius: 100%;
}

.feedback__gallery-text {
  font-size: 18px;
}

.feedback__gallery-text .swiper-slide {
  height: 190px;
}

.feedback__gallery-content {
  max-width: 740px;
}

.feedback-img {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
}

.feedback-text {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  margin-left: auto;
}

.feedback-text__date {
  display: block;
  font-size: 24px;
  margin-bottom: 20px;
}

.feedback-text__author {
  display: block;
  font-weight: 700;
  margin-bottom: 30px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
